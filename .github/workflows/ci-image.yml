name: CI-Image

on:
  push:
    branches: [ "main" ]
    paths:
      - "app.py"
      - "templates/**"
      - "init.sql"
  pull_request:
    branches: [ "main" ]
    paths:
      - "app.py"
      - "templates/**"
      - "init.sql"

concurrency:
  group: ci-${{ github.ref_name }}  # Each branch has its own concurrency group
  cancel-in-progress: true  # Cancel previous runs on the same branch

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Debug Concurrency
      run: |
        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      id: build_docker
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/star_meme_sql_compose
        VERSION=1.0.${{ github.run_number }}
        docker build -t $IMAGE_NAME:latest .
        docker build -t $IMAGE_NAME:$VERSION .
        echo "IMAGE=$IMAGE_NAME" >> $GITHUB_ENV
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Push Docker image to Docker Hub
      if: github.ref_name == 'main'
      run: |
       docker push ${{ env.IMAGE}}:latest
       docker push ${{ env.IMAGE }}:${{ env.VERSION }}  
    
    - name: Set up Docker Compose environment variables
      run: |
         echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
         echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
         echo "DB_HOST=${{ vars.DB_HOST }}" >> $GITHUB_ENV
         echo "DB_NAME=${{ vars.DB_NAME }}" >> $GITHUB_ENV
         echo "DB_USER=${{ vars.DB_USER }}" >> $GITHUB_ENV
         echo "FLASK_PORT=${{ vars.FLASK_PORT }}" >> $GITHUB_ENV
    
    - name: create text file for artifacts
      run: |
        echo "${VERSION}" > version.txt
        cat version.txt

    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: version
        path: version.txt

    - name: Run Tests
      run: |
        docker compose up -d  # Start containers
        echo "Waiting for application to start..."
       
        for i in {1..24}; do  # Retry up to 24 times (24 * 5s = 120s)
          if curl --fail --max-time 5 http://localhost:5000; then
            echo "Application started successfully!"
            exit 0  # Exit successfully if the app is up
          fi
            echo "Attempt $i: Application not ready yet, retrying in 5 seconds..."
            sleep 5
          done
       
          echo "Application failed to start within 120 seconds. Showing logs:"
          docker compose logs app  # Print application logs
          exit 1  # Fail the job if the app is still not ready
       

    - name: Create Pull Request (Other Branches)
      if: github.ref_name != 'main'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Build Docker image for branch ${{ github.ref_name }}"
        title: "Build Docker image for branch ${{ github.ref_name }}"
        body: |
            This pull request includes the Docker image build for branch ${{ github.ref_name }}.
            Built versions:
            - `latest`
            - `${{ env.VERSION }}`
        base: main
        branch: ${{ github.ref_name }}
